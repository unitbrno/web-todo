<html>
<head>
    <meta charset="utf-8">
    <title>{ifset title}{include title|striptags} | {/ifset}TODO UNIT</title>
    <meta name="viewport" content="width=device-width, initial-scale=1"/>

    <!-- Icon -->
    <link rel="shortcut icon" href="{$basePath}/images/unit-logo.ico">

    <!-- Bootstrap -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css"
          integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">

    <!-- FontAwesome -->
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.0.9/css/all.css"
          integrity="sha384-5SOiIsAziJl6AWe0HWRKTXlfcSHKmYV4RBF18PPJ173Kzn7jzMyFuTtk8JA7QQG1" crossorigin="anonymous">

    <!-- My CSS -->
    <link rel="stylesheet" href="{$basePath}/css/mycss.css">

    <!-- Forms -->
    <link rel="stylesheet" href="{$basePath}/css/forms.css">

</head>

<body>
<nav class="navbar sticky-top navbar-dark bg-dark">
    <div class="container-fluid">
        <div class="navbar-header">
            <a class="navbar-brand" n:href="Homepage:">TODO</a>
        </div>
        <div class="form-inline navbar-right">
            {snippet loginButton}
                {if ($user->isLoggedIn())}
                    <a n:href="Homepage:account" class="ajax" onclick="toAccount()"><span
                                class="header-button"></span><i
                                class="fas fa-user-circle my-margin-right header-button"></i></a>
                {else}
                    <a n:href="Homepage:login" class="ajax" onclick="toLogin2()"><span class="header-button"></span><i
                                class="fas fa-user-circle my-margin-right header-button"></i></a>
                {/if}
            {/snippet}
        </div>
    </div>
</nav>

<!-- Sidebar -->
<div class="wrapper">
    <nav id="sidebar">
        {snippet contentSnippet}
            {include content}
        {/snippet}

    </nav>


    <div id="content">
        {$mapHelper|noescape}
        {$mapApiHelper|noescape}
        <button type="button" id="sidebarCollapse" class="navbar-btn buttonek">
            <span></span>
            <span></span>
            <span></span>
        </button>
    </div>
</div>

<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.3.1.js"
        integrity="sha256-2Kok7MbOyxpgUVvAk/HJ2jigOSYS2auK4Pfzbm7uH60="
        crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>

<script>
    var mhdEnabled = true;
    var shopEnabled = true;
    var funEnabled = true;
    var interestingEnabled = true;
    var restaurantEnabled = true;
</script>

<script src="{$basePath}/js/nette.ajax.js"></script>
<script src="{$basePath}/js/myjs.js"></script>
<script src="{$basePath}/js/myURL.js"></script>
<script>
    $(function () {
        $.nette.init();
    });
</script>
<script>
    function fbAfterLogin() {
        $.nette.ajax({
            url: {link FacebookCookie!}
        });
    }

</script>

<script>
    var bodZMapy = false;

    function changeRoute(index, typ) {
        $.nette.ajax({
            url: "\/homepage\/plan?index=" + index + "&typ=" + typ + "&do=changeRoute"
        });
    }

    function bodMapa() {
        if (bodZMapy) {
            bodZMapy = false;
            $("#zMapy").html('Bod z mapy');
            $("#zMapy").removeClass('active');
        }
        else {
            bodZMapy = true;
            $("#zMapy").html('Vyberte bod');
            $("#zMapy").addClass('active');
        }
    }

    function cancelPlanner() {
        $.nette.ajax({
            url: "\/homepage\/plan?do=cancelPlanner"
        });
    }

    function addPointPlanner(name, lati, longi) {
        $.nette.ajax({
            url: "\/homepage\/plan?name=" + decodeURIComponent(name) + "&lati=" + lati + "&longi=" + longi + "&do=addPoint"
        });
    }

    var places = [
                {foreach $places as $place}
            [{$place->getName()}, {$place->getLati()}, {$place->getLongi()}, {$place->getTag()}],
                {/foreach}
        ]
    ;
</script>
{snippet fbSnippet}
    <script src="//connect.facebook.net/en_US/all.js"></script>
    <script>
        var preLocation;
        var infowindow = null;
        var placesMarkers = [[], [], [], []];
        var placesMarkersSet = false;
        var mhdMarkers = [];
        var mhdInterval;
        var customMarker;

        FB.init({
            appId: '356707758145198',
            status: true,
            cookie: true,
            xfbml: true,
            channelUrl: 'https://unitbrno.psopf.cz/',
            oauth: true
        });
    </script>
{/snippet}

<script>
    function savePreLocation() {
        preLocation = map.getCenter();
    }

    function checkIfInArea() {
        if (window.allowedBounds.contains(map.getCenter())) {
            return;
        }

        if (window.allowedBounds.contains(preLocation)) {
            map.setCenter(preLocation);
        }
        else {
            map.setCenter(window.allowedBounds.getCenter());
        }
    }

    function resize_map() {
        var center = map.getCenter();
        google.maps.event.trigger(map, "resize");
        map.setCenter(center);
    }

    function placeMarkers() {
        if (!placesMarkersSet) {


            places.forEach(function (entry) {
                myLatLng = {
                    lat: parseFloat(entry[1]),
                    lng: parseFloat(entry[2])
                };

                if (entry[3] == "fun") {
                    image = "fun";
                    id = 0;
                } else if (entry[3] == "shop") {
                    image = "shop";
                    id = 1;
                } else if (entry[3] == "restaurant") {
                    image = "restaurant";
                    id = 2;
                } else if (entry[3] == "interest") {
                    image = "place";
                    id = 3;
                }

                marker = new google.maps.Marker({
                    position: myLatLng,
                    icon: "https://unitbrno.psopf.cz/images/" + image + ".png"
                });

                infowindow = new google.maps.InfoWindow();
                makeInfoWindowEvent(map, infowindow, entry[0] + '<br><a class="addPointLink" onclick="addPointPlanner(\'' + entry[0] + '\', \'' + entry[1] + '\', \'' + entry[2] + '\' )">Přidat do plánovače</a>', marker);

                marker.setMap(map);

                placesMarkers[id].push(marker);
            });

            placesMarkersSet = true;
        }
    }

    function makeInfoWindowEvent(map, infowindow, contentString, marker) {
        google.maps.event.addListener(map, "click", function (event) {
            if (bodZMapy) {
                latitude = event.latLng.lat();
                longitude = event.latLng.lng();
                bodMapa();
                addPointPlanner("Vlastní bod", latitude, longitude);
            }

            infowindow.close();
        });

        google.maps.event.addListener(marker, 'click', function () {
            infowindow.setContent(contentString);
            infowindow.open(map, marker);
        });
    }

    function getBusMarkers(force = false) {
        if ((typeof mhdInterval != "number" && mhdEnabled) || force) {
            getMhdMarkers();
            mhdInterval = setInterval(function () {
                getMhdMarkers();
            }, 5000);
        }
    }

    function getMhdMarkers() {
        jQuery.ajax({
            url: "https://unitbrno.psopf.cz/Api/mhd",
            type: "GET",

            contentType: 'application/json; charset=utf-8',
            success: function (resultData) {
                mhdMarkers.forEach(function (marker) {
                    marker.setMap(null);
                });

                mhdMarkers = [];

                data = jQuery.parseJSON(resultData);

                data.forEach(function (entry) {
                    if (entry.route >= 1 && entry.route <= 20) {
                        mhdName = "Tramvaj";
                        image = "train";
                    }
                    else if (entry.route >= 20 && entry.route <= 39) {
                        mhdName = "Trolejbus";
                        image = "bus";
                    }
                    else {
                        mhdName = "Bus";
                        image = "bus";
                    }

                    myLatLng = {
                        lat: entry.latitude,
                        lng: entry.longitude
                    };

                    marker = new google.maps.Marker({
                        position: myLatLng,
                        icon: "https://unitbrno.psopf.cz/images/" + image + ".png"
                    });

                    infowindow = new google.maps.InfoWindow();
                    makeInfoWindowEvent(map, infowindow, "<strong>" + mhdName + " č. " + entry.route + "</strong><br>" + entry.headsign, marker);

                    marker.setMap(map);
                    mhdMarkers.push(marker);
                });
            },
            error: function (jqXHR, textStatus, errorThrown) {
            },

            timeout: 1000,
        });
    }

    function changeMhdState() {
        if (!mhdEnabled) {
            clearInterval(mhdInterval);
            mhdMarkers.forEach(function (marker) {
                marker.setMap(null);
            });
        }
        else {
            getBusMarkers(true);
        }
    }

    function changeMarkersState() {
        if (!funEnabled) {
            placesMarkers[0].forEach(function (marker) {
                marker.setMap(null);
            });
        }
        else {
            placesMarkers[0].forEach(function (marker) {
                marker.setMap(map);
            });
        }

        if (!shopEnabled) {
            placesMarkers[1].forEach(function (marker) {
                marker.setMap(null);
            });
        }
        else {
            placesMarkers[1].forEach(function (marker) {
                marker.setMap(map);
            });
        }

        if (!restaurantEnabled) {
            placesMarkers[2].forEach(function (marker) {
                marker.setMap(null);
            });
        }
        else {
            placesMarkers[2].forEach(function (marker) {
                marker.setMap(map);
            });
        }

        if (!interestingEnabled) {
            placesMarkers[3].forEach(function (marker) {
                marker.setMap(null);
            });
        }
        else {
            placesMarkers[3].forEach(function (marker) {
                marker.setMap(map);
            });
        }

    }
</script>

</body>
</html>